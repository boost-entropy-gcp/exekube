# Since we sometimes use ADCs, and since the binaryauthorization API does not
# allow ADCs, we need a dedicated SA to manage binary auth. See GPII-3860.
data "google_service_account_access_token" "bin-auth" {
  count    = "${var.enable_binary_authorization ? 1 : 0}"
  provider = "google-beta"

  target_service_account = "gke-cluster-bin-auth@${var.project_id}.iam.gserviceaccount.com"
  scopes                 = ["cloud-platform"]
  lifetime               = "300s"
}

provider "google-beta" {
  alias        = "bin-auth"
  access_token = "${data.google_service_account_access_token.bin-auth.access_token}"
}

resource "google_binary_authorization_policy" "policy" {
  count    = "${var.enable_binary_authorization ? 1 : 0}"
  provider = "google-beta.bin-auth"
  project  = "${var.project_id}"

  default_admission_rule {
    evaluation_mode  = "${var.binary_authorization_evaluation_mode}"
    enforcement_mode = "${var.binary_authorization_enforcement_mode}"
  }

  # Each `admission_whitelist_patterns` block supports only one `name_pattern`.
  # To specify multiple patterns, we must specify multilple
  # `admission_whitelist_patterns` blocks.
  #
  # The first set of patterns provide some slots for module users to specify
  # their custom patterns. It would be nice to use something like
  # https://www.terraform.io/docs/configuration/expressions.html#dynamic-blocks
  # but they are not available in Terraform 0.11 :(.

  admission_whitelist_patterns {
    name_pattern = "${var.binary_authorization_admission_whitelist_pattern_0}"
  }
  admission_whitelist_patterns {
    name_pattern = "${var.binary_authorization_admission_whitelist_pattern_1}"
  }
  admission_whitelist_patterns {
    name_pattern = "${var.binary_authorization_admission_whitelist_pattern_2}"
  }
  admission_whitelist_patterns {
    name_pattern = "${var.binary_authorization_admission_whitelist_pattern_3}"
  }
  admission_whitelist_patterns {
    name_pattern = "${var.binary_authorization_admission_whitelist_pattern_4}"
  }
  admission_whitelist_patterns {
    name_pattern = "${var.binary_authorization_admission_whitelist_pattern_5}"
  }
  admission_whitelist_patterns {
    name_pattern = "${var.binary_authorization_admission_whitelist_pattern_6}"
  }
  admission_whitelist_patterns {
    name_pattern = "${var.binary_authorization_admission_whitelist_pattern_7}"
  }

  # The next set of patterns cover Google-provided system images. It would be
  # nice to use the `globalPolicyEvaluationMode` field in the API
  # (https://cloud.google.com/binary-authorization/docs/reference/rest/v1/Policy)
  # but the google provider doesn't support it :(.
  #
  # The GENERATED section is manually generated by this process:
  #
  # 1. Collect list of Google-provided system images, e.g. the short list at
  # https://cloud.google.com/binary-authorization/docs/configuring-policy-cli#global_policy_evaluation_mode.
  #
  # Alternately, use the full list associated with
  # `globalPolicyEvaluationMode`. From the Dashboard: Security -> Binary
  # Authorization -> Edit Policy -> next to "Trust all Google-provided system
  # images" -> View Details.
  #
  # 2. In a temporary directory (the only artifact we'll keep from this process
  # will be pasted below), paste the list from step 1 into a file
  # `google_provided_system_images.txt`, one entry per line. Use only the
  # patterm, removing any formatting or `namePattern:` decorations.
  #
  # 3. Run the following script to generate the GENERATED section:
  #
  # (echo ; echo "  # BEGIN GENERATED SECTION" ; for IMAGE_PATTERN in $(cat google_provided_system_images.txt) ; do echo "  admission_whitelist_patterns {" ; echo "    name_pattern = \"$IMAGE_PATTERN\"" ; echo "  }" ; done ; echo ; echo "  # END GENERATED SECTION") > google_provided_system_images.tf.part
  #
  # 4. Replace the GENERATED section below with the contents of
  # `google_provided_system_images.tf.part`.

  # BEGIN GENERATED SECTION
  admission_whitelist_patterns {
    name_pattern = "gcr.io/google_containers/*"
  }
  admission_whitelist_patterns {
    name_pattern = "gcr.io/google-containers/*"
  }
  admission_whitelist_patterns {
    name_pattern = "k8s.gcr.io/*"
  }
  admission_whitelist_patterns {
    name_pattern = "gcr.io/stackdriver-agents/*"
  }

  # END GENERATED SECTION
}
